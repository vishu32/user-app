{"ast":null,"code":"import _slicedToArray from\"H:/react/user-log/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Login from'./components/Login/Login';import Home from'./components/Home/Home';import MainHeader from'./components/MainHeader/MainHeader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoggedIn=_useState2[0],setIsLoggedIn=_useState2[1];useEffect(function(){var storedUserLoginInformation=localStorage.getItem('isLoggedIn');if(storedUserLoginInformation===1){setIsLoggedIn(true);}},[]);var loginHandler=function loginHandler(email,password){// We should of course check email and password\n// But it's just a dummy/ demo anyways\nlocalStorage.setItem('isLoggedIn','1');setIsLoggedIn(true);};var logoutHandler=function logoutHandler(){setIsLoggedIn(false);localStorage.removeItem('isLoggedIn');};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(MainHeader,{isAuthenticated:isLoggedIn,onLogout:logoutHandler}),/*#__PURE__*/_jsxs(\"main\",{children:[!isLoggedIn&&/*#__PURE__*/_jsx(Login,{onLogin:loginHandler}),isLoggedIn&&/*#__PURE__*/_jsx(Home,{onLogout:logoutHandler})]})]});}export default App;","map":{"version":3,"sources":["H:/react/user-log/src/App.js"],"names":["React","useState","useEffect","Login","Home","MainHeader","App","isLoggedIn","setIsLoggedIn","storedUserLoginInformation","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem"],"mappings":"wIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oCAAvB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAoCL,QAAQ,CAAC,KAAD,CAA5C,wCAAOM,UAAP,eAAmBC,aAAnB,eACAN,SAAS,CAAC,UAAI,CACZ,GAAMO,CAAAA,0BAA0B,CAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAlC,CAEA,GAAIF,0BAA0B,GAAI,CAAlC,CACA,CACED,aAAa,CAAC,IAAD,CAAb,CACD,CACF,CAPQ,CAOP,EAPO,CAAT,CASA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACxC;AACA;AACAJ,YAAY,CAACK,OAAb,CAAqB,YAArB,CAAkC,GAAlC,EACAP,aAAa,CAAC,IAAD,CAAb,CACD,CALD,CAOA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BR,aAAa,CAAC,KAAD,CAAb,CACAE,YAAY,CAACO,UAAb,CAAwB,YAAxB,EACD,CAHD,CAKA,mBACE,MAAC,KAAD,CAAO,QAAP,yBACE,KAAC,UAAD,EAAY,eAAe,CAAEV,UAA7B,CAAyC,QAAQ,CAAES,aAAnD,EADF,cAEE,wBACG,CAACT,UAAD,eAAe,KAAC,KAAD,EAAO,OAAO,CAAEK,YAAhB,EADlB,CAEGL,UAAU,eAAI,KAAC,IAAD,EAAM,QAAQ,CAAES,aAAhB,EAFjB,GAFF,GADF,CASD,CAED,cAAeV,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(()=>{\n    const storedUserLoginInformation =localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoginInformation ===1)\n    {\n      setIsLoggedIn(true);\n    }\n  },[])\n  \n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn','1')\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('isLoggedIn')\n  };\n\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}